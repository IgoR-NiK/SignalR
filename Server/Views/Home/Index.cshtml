<!DOCTYPE html>
<html>
<head>
    <title>Обмен сообщениями в режиме реального времени</title>
       
    <!-- Ссылка на VueJs -->
    <script src="~/Scripts/vue.min.js"></script>
</head>
<body>
    <p>@Html.ActionLink("Скачать клиентские приложения Windows Forms и Android.Apk", "GetFiles", "Home")</p>
    <p>@Html.ActionLink("Перейти в режим рисования", "Paint", "Home")</p>
    <br />
    <div id="app">
        <div>
            <label for="name">Имя:</label>
            <input type="text" id="name" v-model="name" />
        </div>
        <br />
        <div id="inputForm">
            <label for="message">Сообщение:</label>
            <input type="text" id="message" v-model="message" />
            <button v-on:click="sendMessage">Отправить</button>
        </div>
        <br />
        <p><b>Сообщения:</b></p>
        <div v-for="elem in messages">
            <p><b>{{elem.name}}:</b> {{elem.message}}</p>
        </div>
    </div>

    <!-- Ссылка на библиотеку jQuery, поскольку скрипт SignalR имеет зависимости от jQuery -->
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>

    <!-- Ссылка на библиотеку SignalR -->
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>

    <!-- Ссылка на автоматически сгенерированный скрипт хаба SignalR -->
    <script src="~/signalr/hubs"></script>

    <script>
        var app = new Vue({
            el: '#app',
            data: {
                isConnect: false,
                name: '',
                message: '',
                messages: []
            },
            methods: {
                sendMessage: function () {
                    if (this.isConnect) {
                        chat.server.sendMessageServer(this.name, this.message); // Вызываем у хаба метод SendMessageServer
                        this.message = '';                                      // Очищаем текстовое поле
                    }
                }
            }
        });

        // Ссылка на автоматически-сгенерированный прокси хаба
        var chat = $.connection.myHub;

        // Открываем соединение
        connect();
        function connect() {
            $.connection.hub.start().fail(() => setTimeout(connect, 5000));
        }

        // Логика переподключения
        $.connection.hub.stateChanged(function (change) {
            switch (change.newState) {
                case $.signalR.connectionState.connected:
                    app.isConnect = true;
                    app.messages.push({
                        name: 'Системное сообщение',
                        message: 'Вы подключились к чату'
                    });
                    break;
                case $.signalR.connectionState.reconnecting:
                    app.isConnect = false;
                    app.messages.push({
                        name: 'Системное сообщение',
                        message: 'Произошло отключение от чата. Пытаемся возобновить связь...'
                    });
                    break;
                case $.signalR.connectionState.disconnected:
                    app.isConnect = false;
                    setTimeout(connect, 5000);
                    break;
            }
        });

        // Функция, которую вызывает хаб
        chat.client.sendMessageClient = function (name, message) {
            app.messages.push({
                name: name,
                message: message
            });
        };
    </script>
</body>
</html>